# 용혼석 테이블들...
# TAB 으로 구분되니 엑셀로 볼 것.
# vim으로 본다면 탭간 간격을 조정하고 볼 것. (set ts=16 추천)
# 큰 따옴표로 묶인 부분은 안 구분. 	
# \" 이딴거 지원 안함.
	
# 용혼석 Vnum에 대한 comment	
# ITEM VNUM을 10만 자리부터, FEDCBA라고 한다면
# FE : 용혼석 종류.	D : 등급
# C : 단계			B : 강화		
# A : 여벌의 번호들... 	
# 이 체계에서 벗어나는 용혼석은 용서하지 않을 것이다.	
# ok?	
# 용혼석이 너무나도 많기 때문에 Vnum이 중구난방이면,
#	Special item group에서 group으로 묶어서 처리하기도 힘들고-_-,
#	VnumHelper.h에서 처리하는 것도 힘들다. -_-
# 	Group 잡는데만 수천줄을 써야할 지도...
# Vnum에 체계를 잡아서 자릿수 기반으로 해야만 한다.	
	
# Table은 "Group"과 "이름"으로 시작한다.
# Table 내부에 또 Table이 있을 수 있다.	
# 그렇다고 엉뚱한 테이블을 써놓는다고 서버가 인식하는 것은 아니다.	
# 필요한 테이블은 다음과 같다.	
# BaseVnums, BaseAttrs, AddtionalAttrs, AttrSettings, UpgradeTable, ImproveTable,
# RefineTable, UpgradeMoneys, ImproveTable, RefineMoneys, WeightTable, DurationTable,
# DragonHeartExtTable, DragonSoulExtTable
	
Group BaseVnums
{
	# 시작 vnum.
	# 여기서 써야할 부분은 위에 설명한 FE에 해당하는 부분. 나머지는 써봐야 싹다 무시함.
	# FE * 10000을 써줄 것 ok?
	백룡석	110000
	흑룡석	120000
	...	
}
	
Group BaseAttrs
{
	Group 백룡석
	{
	#	순서값이 낮은 것 부터 부여된다.			
	#	(개발자 comment : APPLY_어쩌고 이런거 읽어서 value로 변환해줘야함.)
	#	(졸라 귀찮아...)
	#	순서	속성	값
		1	APPLY_INT	10
		2	APPLY_DEX	10
	}
}

Group AddtionalAttrs
{
	Group 백룡석
	{
	#	속성	값	확률	
	#	확률은 백분위가 아니라 전체 확률 값을 모두 더한 값에서의 비율만큼 적용된다.			
		APPLY_DEX	10	20	
		APPLY_STEAL_SP	10	30	
		APPLY_DEF_GRADE_BONUS	10	30
	}
	Group 흑룡석
	{
	...
	}
}
	
# 등급에 따른 속성	
# min ~ max. 오케이? (중간에 SPACE 있어도 되고 없어도 되고.)	
Group AttrSettings
{
	Group 백룡석
	{
		# 등급	1	2	3	4	5
		기본	1	1	1	2	2
		추가_min	0	0	0	0	0
		추가_max	0	1	2	2	3
	}
}
	
# 개량 table	
Group UpgradeTable
{
#			변환등급		
#	등급	필요개수	일반	화려	희귀	전설	고대
	일반	20	70	25	5	0	0
	화려	10	25	70	5	0	0
	희귀	5	9.9	20	80	0.1	0
	전설	3	1.9	3	5	90	0.1	
}
	
Group ImproveTable
{
# 			단계등급		
#	단계	필요개수	최하급	하급	중급	상급	최상급
	최하급	4	70	25	5	0	0
	하급	3	25	70	5	0	0
	중급	2	10	20	80	1	0
	상급	1	2	3	5	90	1
}
	
Group RefineTable
{
#		강화 레벨			
#	분류	1	2	3	4	5	6	7			
	일반 강화석	100	80	70	50	30	20	10			
	축복의 강화석	100	88	77	55	33	22	11			
	용신의 강화석	100	90	80	60	40	30	20			
}
# special_item_group 읽으면, group_name도 저장할 것.
# group_name으로 "일반 강화석" 찾아서 쓸 것.	
	
# 아래 Money 테이블들은 개량시 필요한 돈을 말함.	
Group UpgradeMoneys
{
	일반	10000			
	화려	15000			
	희귀	20000			
	전설	20000			
}
Group ImproveTable
{
	최하급	10000			
	하급	10000			
	중급	20000			
	상급	25000			
}
	
Group RefineMoneys	
{
	1	1000			
	2	2000			
	3	3000			
	4	3000			
	5	3000			
	6	20000
}
	
# 용혼석 가중치 테이블.	
# 이 테이블에서 값이 0이라면 그 이상의 강화는 불가능하다고 판단한다.	
Group WeightTable
{
	Group 일반
	{
#		단계	강화		
#			1	2	3	4	5	6	7		
		최하급	1	2	3	0	0	0	0	　	　
		하급	2	3	4	0	0	0	0		
		중급	3	4	5	6	0	0	0		
		상급	4	5	6	7	0	0	0		
		최상급	5	6	7	8	10	0	0		
	}
#		단계	강화		
#			1	2	3	4	5	6	7		
	Group 화려
	{
		최하급	3	4	5	6	0	0	0		
		하급	4	5	6	8	0	0	0		
		중급	5	6	8	10	0	0	0		
		상급	6	8	10	12	15	0	0		
		최상급	8	10	12	15	20	0	0		
	}
#		단계	강화		
#			1	2	3	4	5	6	7		
	Group 희귀
	{
		최하급	6	7	9	11	15	0	0		
		하급	7	9	11	15	20	0	0		
		중급	9	11	15	20	25	0	0		
		상급	11	15	20	25	30	0	0		
		최상급	15	20	25	30	40	0	0		
	}
#		단계	강화		
#			1	2	3	4	5	6	7		
	Group 고대
	{
		최하급	10	12	15	18	20	0	0		
		하급	12	15	18	20	25	0	0		
		중급	15	18	20	25	35	0	0		
		상급	18	20	25	35	40	0	0		
		최상급	20	25	35	40	60	80	0		
	}	
#		단계	강화		
#			1	2	3	4	5	6	7		
	Group 전설
	{
		최하급	30	35	40	45	50	0	0		
		하급	35	40	45	50	55	0	0		
		중급	40	45	50	55	65	0	0		
		상급	45	50	55	65	75	90	0		
		최상급	50	55	65	75	90	105	120		
	}
# 용혼석 지속시간	
Group DurationTable
{
	일반	24			
	화려	12			
	희귀	8			
	고대	6			
	전설	4			
}
	
# 용심 추출 확률 테이블	
Group DragonHeartExtTable
{
# 용심 충전량(%)	
	용심 충전량	0	5	15	30	50	
#	등급과 충전량에 따른 확률 테이블
#	등급 	확률			
	일반	50	35	12	2	1	
	화려	35	40	20	4	1	
	희귀	20	35	30	12	3	
	고대	15	30	35	15	5	
	전설	10	20	40	20	10	
}

# or 이거 2안도 있삼.	
#	(기획서 상의 내용이 충분치가 않아 2안이 있을 수 있다는 정도만 환기 시키기 위해 써 놓음.
#		부족한 부분은 임의로 정함.)
# 용혼석 등급에 따라 추출할 수 있는 용심이 정해져 있고, 그 확률도 정할 수 있음.
# 만일 이런 방식으로 확정된다면 아래 테이블에서 #을 하나씩 삭제하면 됨.	
#Group DragonHeartExtTable
#{
#	등급	일반	화려	희귀	고대	전설
#	용심 종류	5	10	20	30	50
#	확률	60	60	60	60	60
#}
	
# 용혼석 추출 확률 테이블.	
# 이것도 1, 2안이 있어 통합할 수 있는 방안으로 감.	
# 추출 확률을 정할 수 있고, 실패 부산물도 정할 수 있음.(0이면 안줌)
Group DragonSoulExtTable
{
#	등급	확률	실패 부산물(vnum)		
	일반	50	0	
	화려	40	0	
	희귀	30	0	
	고대	30	0	
	전설	20	10	
}
